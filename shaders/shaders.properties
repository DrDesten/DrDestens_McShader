
##########################################################################
## Optifine Options
##########################################################################

shadowTranslucent=true
underwaterOverlay=false
sun=true
moon=true
vignette=false
rain.depth=false
beacon.beam.depth=true
oldLighting=false

## Separate AO
## When enabled the AO brightness (smooth lighting) is separated from "color.rbg" and put in "color.a". 
separateAo=true

## Makes World Curvature nicer
##frustum.culling=false


## OptiFine version
## The minimum OptiFine version which is required by the shader pack
## Each Minecraft version has to be specified separately.
version.1.8=J1
version.1.16=G8

##########################################################################
## Custom Textures
##########################################################################

##texture.noise=tex/BlueNoiseRGB64.png


##########################################################################
## Custom Uniforms
##########################################################################



## Common Variables ########################

variable.float.tau=pi * 2

uniform.float.nearInverse=1.0 / near

uniform.vec2.atlasSizeInverse=vec2(1.0 / atlasSize.x, 1.0 / atlasSize.y)

uniform.vec2.screenSize=vec2(viewWidth, viewHeight)
uniform.vec2.screenSizeInverse=vec2(1.0 / viewWidth, 1.0 / viewHeight)

## Normalized Positions
variable.float.sunLength = sqrt((sunPosition.x * sunPosition.x) + (sunPosition.y * sunPosition.y) + (sunPosition.z * sunPosition.z))
uniform.vec3.sunDir = vec3(sunPosition.x / sunLength, sunPosition.y / sunLength, sunPosition.z / sunLength)

variable.float.moonLength = sqrt((moonPosition.x * moonPosition.x) + (moonPosition.y * moonPosition.y) + (moonPosition.z * moonPosition.z))
uniform.vec3.moonDir = vec3(moonPosition.x / moonLength, moonPosition.y / moonLength, moonPosition.z / moonLength)

variable.float.upLength = sqrt((gbufferModelView.1.0 * gbufferModelView.1.0) + (gbufferModelView.1.1 * gbufferModelView.1.1) + (gbufferModelView.1.2 * gbufferModelView.1.2))
uniform.vec3.up = vec3(gbufferModelView.1.0 / upLength, gbufferModelView.1.1 / upLength, gbufferModelView.1.2 / upLength)

## Day / Night Cycle ################################

## shadowLightPosition switches from the sun to the moon at 12786 ticks and back to the sun at 23215 ticks
## normalizedTime goes from 0 at sunrise to 0.5 at sunset to 1 at the next sunrise

## length of the day in normalizedTimeAligned
variable.float.dayLength = (12786.0 + 785.0) / 24000.0
## length of the night in normalizedTimeAligned
variable.float.nightLength = 1. - dayLength
## normalizedTimeAligned starts and ends at sunrise
variable.float.normalizedTimeAligned = frac((worldTime + 785.0) / 24000.0)
## Modifying normalizedTimeAligned to be 0.5 at sunset, thus satifying the conditions
## Step 1: Selecting if its day or night
## Step 2: Normalizing for the day and bringing it to [0.0;0.5] to align sunset
## Step 3: Normalizing for the night and bringing it to [0.5;1.0] to align sunset for this part as well
uniform.float.normalizedTime = if(normalizedTimeAligned < dayLength, (normalizedTimeAligned / dayLength) * 0.5, ((normalizedTimeAligned - dayLength) / nightLength) * 0.5 + 0.5 )


## Sky ###############################

## Smooth day to night curve
uniform.float.daynight = sin(normalizedTime * tau) * -0.5 + 0.5
## Sunset curve (power adjusts the sunset length)
uniform.float.sunset = clamp( pow(cos(normalizedTime * tau), 100) * 3, 0, 1)

uniform.float.customStarBlend = clamp( sin(normalizedTime * tau) * -4.25, 0, 1 ) * (1 - rainStrength)

## Lighting ###############################

## Brightness of PBR Sunlight
uniform.float.lightBrightness=( clamp( sin(normalizedTime * tau) + 0.5, 0, 1 ) * 0.99 + 0.01 )        * ( (1.0 - rainStrength) * 0.9 + 0.1 )

## shadowLightPosition replacement
uniform.vec3.lightPosition=vec3( if( between(worldTime, 12786, 23215), moonPosition.x , sunPosition.x ), \
                                 if( between(worldTime, 12786, 23215), moonPosition.y , sunPosition.y ), \
                                 if( between(worldTime, 12786, 23215), moonPosition.z , sunPosition.z )  )

## lightPosition Transformed to Clip Space (with homogenous w)
uniform.vec4.lightPositionClip=vec4( \
    ( ((sunPosition.x * gbufferProjection.0.0) + (sunPosition.y * gbufferProjection.1.0)) + gbufferProjection.2.0 + gbufferProjection.3.0 ) / -sunPosition.z, \
    ( ((sunPosition.x * gbufferProjection.0.1) + (sunPosition.y * gbufferProjection.1.1)) + gbufferProjection.2.1 + gbufferProjection.3.1 ) / -sunPosition.z, \
    1.0, \
    if( between(worldTime, 12786, 23215), -moonPosition.z , -sunPosition.z ) \
)



## TAA #####################################

##uniform.float.movementSpeedSq=(cameraPosition.x - previousCameraPosition.x) * (cameraPosition.x - previousCameraPosition.x) + \
##                               (cameraPosition.y - previousCameraPosition.y) * (cameraPosition.y - previousCameraPosition.y) + \
##                               (cameraPosition.z - previousCameraPosition.z) * (cameraPosition.z - previousCameraPosition.z)
uniform.vec2.taaOffset=vec2( \
    (frac(1./1.32471795724474602596 * frameCounter + 0.5) - 0.5) / viewWidth, \
    (frac(1./1.75487766624669276004 * frameCounter + 0.5) - 0.5) / viewHeight \
)

## Other Effects ###########################

uniform.float.isInvisibleSmooth=smooth(if(is_invisible, 1, 0), 10)

##uniform.float.isHurtSmooth=smooth(if(is_hurt, 1, 0), 0.05, 0.5)


##########################################################################
## Blending
##########################################################################


##########################################################################
## Program Management
##########################################################################

#if MC_VERSION >= 11605
program.world-1/gbuffers_skybasic.enabled=false
program.world0/gbuffers_skybasic.enabled=false
program.world1/gbuffers_skybasic.enabled=false
#endif

program.world-1/deferred.enabled=SCREEN_SPACE_AMBIENT_OCCLUSION
program.world0/deferred.enabled=SCREEN_SPACE_AMBIENT_OCCLUSION
program.world1/deferred.enabled=SCREEN_SPACE_AMBIENT_OCCLUSION

program.world-1/composite4.enabled=DEPTH_OF_FIELD || TAA
program.world0/composite4.enabled=DEPTH_OF_FIELD || TAA
program.world1/composite4.enabled=DEPTH_OF_FIELD || TAA

program.world-1/composite5.enabled=DEPTH_OF_FIELD
program.world0/composite5.enabled=DEPTH_OF_FIELD
program.world1/composite5.enabled=DEPTH_OF_FIELD
program.world-1/composite6.enabled=DEPTH_OF_FIELD
program.world0/composite6.enabled=DEPTH_OF_FIELD
program.world1/composite6.enabled=DEPTH_OF_FIELD

program.world-1/composite7.enabled=BLOOM || MOTION_BLUR
program.world0/composite7.enabled=BLOOM || MOTION_BLUR
program.world1/composite7.enabled=BLOOM || MOTION_BLUR

##########################################################################
## Profiles
##########################################################################

profile.LOW     =                   SSR_MODE:2 !SCREEN_SPACE_AMBIENT_OCCLUSION SSAO_QUALITY:1 !DEPTH_OF_FIELD DOF_SAMPLES:8  !MOTION_BLUR !BLOOM !GODRAYS 
profile.MEDIUM  = profile.LOW       SSR_MODE:3  SCREEN_SPACE_AMBIENT_OCCLUSION                                DOF_SAMPLES:24  MOTION_BLUR  BLOOM  GODRAYS
profile.HIGH    = profile.MEDIUM                                               SSAO_QUALITY:3  DEPTH_OF_FIELD DOF_SAMPLES:36


##########################################################################
## Option Screen | Sliders
##########################################################################

sliders         = GODRAY_MOON_R GODRAY_MOON_G GODRAY_MOON_B GODRAY_SUN_R GODRAY_SUN_G GODRAY_SUN_B CAVE_FOG_BRIGHTNESS RAIN_OPACITY WATER_ABSORPTION_COLOR_DAY_R WATER_ABSORPTION_COLOR_DAY_G WATER_ABSORPTION_COLOR_DAY_B WATER_ABSORPTION_COLOR_MULT VIGNETTE_STRENGTH BRIGHTNESS VIBRANCE WATER_ABSORPTION_DENSITY ambientOcclusionLevel BLOOM_RADIUS centerDepthHalflife sunPathRotation DOF_SAMPLES WATER_ABSORPTION_BIAS RESOURCE_PACK_RESOLUTION DIRECTIONAL_LIGHTMAP_STRENGTH TAA_SHARPENING_AMOUNT TORCHLIGHT_EXTRA_BRIGHTNESS SUNSET_FOG_AMOUNT GODRAY_SIZE END_SKY_DOWN_R END_SKY_DOWN_G END_SKY_DOWN_B END_SKY_UP_R END_SKY_UP_G END_SKY_UP_B SKY_SUNSET_R SKY_SUNSET_G SKY_SUNSET_B SKY_NOON_R SKY_MIDNIGHT_R SKY_NOON_G SKY_MIDNIGHT_G SKY_NOON_B SKY_MIDNIGHT_B CONTRAST GODRAY_STEPS SSR_REFLECTION_THRESHOLD PBR_AMBIENT_LIGHT_MULTIPLIER POM_DEPTH CHROMATIC_ABERRATION TAA_BLEND WORLD_CURVE_RADIUS EXPOSURE GODRAY_STRENGTH SSAO_STRENGTH WATER_NORMALS_SIZE FOG_AMOUNT PBR_BLEND MOTION_BLUR_STRENGTH BLOOM_AMOUNT SATURATION OUTLINE_DISTANCE WATER_NORMALS_AMOUNT WATER_WAVE_AMOUNT REFRACTION_AMOUNT SSR_STEPS SSR_DEPTH_TOLERANCE DOF_STRENGTH DOF_DOWNSAMPLING  DOF_MAXSIZE SELECTION_OUTLINE_OPACITY

## Main screen #####################################
screen          = <profile> CREDITS <empty> <empty> [DOF_OPTS] [SSR] [WATER] [MATERIALS] [CAMERA] [POST_PROCESSING] [ATMOSPHERE] [WEATHER] [MISC] [OPTIMISATION] <empty> <empty> [DEBUG_OPTS]

## Sub-screens #####################################
screen.DOF_OPTS       = DEPTH_OF_FIELD DOF_SAMPLES <empty> <empty> DOF_STRENGTH DOF_MAXSIZE DOF_DOWNSAMPLING <empty> <empty> <empty> DOF_FAR_BLUR_ONLY DOF_SAMPLE_REJECTION centerDepthHalflife

screen.SSR            = SSR_MODE <empty> SSR_STEPS SSR_DEPTH_TOLERANCE REFLECTION_FADE SSR_REFLECTION_THRESHOLD <empty> <empty> REFRACTION REFRACTION_AMOUNT <empty> <empty> GLASS_REFLECTIONS

screen.WATER            =   WATER_WAVES WATER_WAVE_AMOUNT \
                            <empty> <empty> \
                            WATER_NORMALS WATER_NORMALS_AMOUNT \
                            WATER_NORMALS_SIZE <empty> \
                            <empty> <empty> \
                            WATER_ABSORPTION_DENSITY WATER_ABSORPTION_BIAS \
                            <empty> <empty> \
                            WATER_TEXTURE_VISIBLE [WATER_COLOR_OPTS]
screen.WATER_COLOR_OPTS =   WATER_ABSORPTION_COLOR_DAY_R WATER_ABSORPTION_COLOR_DAY_G WATER_ABSORPTION_COLOR_DAY_B \
                            WATER_ABSORPTION_COLOR_MULT

screen.MATERIALS      = PBR_FORMAT RESOURCE_PACK_RESOLUTION PBR PBR_BLEND <empty> <empty> HEIGHT_AO FRAG_NORMALS HARDCODED_METALS SUBSURAFCE_SCATTERING PARALLAX_OCCLUSION [POM_OPTIONS] PBR_AMBIENT_LIGHT_MULTIPLIER
screen.POM_OPTIONS    = POM_DEPTH POM_DISTORTION POM_SMOOTH

screen.CAMERA         = EXPOSURE TONEMAP <empty> <empty> CONTRAST VIBRANCE SATURATION BRIGHTNESS <empty> <empty> VIGNETTE VIGNETTE_STRENGTH CHROMATIC_ABERRATION

screen.POST_PROCESSING = TAA [TAA_OPTIONS] BLOOM BLOOM_AMOUNT MOTION_BLUR MOTION_BLUR_STRENGTH SCREEN_SPACE_AMBIENT_OCCLUSION SSAO_QUALITY SSAO_STRENGTH <empty> 
screen.TAA_OPTIONS     = TAA_BLEND TAA_SHARPENING_AMOUNT

screen.ATMOSPHERE     = FOG FOG_AMOUNT SUNSET_FOG SUNSET_FOG_AMOUNT CAVE_FOG CAVE_FOG_BRIGHTNESS <empty> <empty> GODRAYS [GODRAY_OPTIONS] GODRAY_STRENGTH GODRAY_SIZE GODRAY_STEPS <empty> <empty> <empty> [SKY_OPTIONS] sunPathRotation
screen.GODRAY_OPTIONS = GODRAY_SUN_R GODRAY_SUN_G GODRAY_SUN_B \
                        GODRAY_MOON_R GODRAY_MOON_G GODRAY_MOON_B 
screen.SKY_OPTIONS    = SKY_NOON_R SKY_NOON_G SKY_NOON_B                \
                        SKY_SUNSET_R SKY_SUNSET_G SKY_SUNSET_B       \
                        SKY_MIDNIGHT_R SKY_MIDNIGHT_G SKY_MIDNIGHT_B \
                        <empty> <empty> <empty>                      \
                        END_SKY_UP_R END_SKY_UP_G END_SKY_UP_B       \
                        END_SKY_DOWN_R END_SKY_DOWN_G END_SKY_DOWN_B \

screen.WEATHER        = RAIN_DETECTION_MODE RAIN_OPACITY RAIN_REFRACTION RAIN_REFRACTION_STRENGTH

screen.MISC           = OUTLINE OUTLINE_DISTANCE SELECTION_OUTLINE SELECTION_OUTLINE_OPACITY <empty> <empty> WAVY_BLOCKS WAVY_LEAVES WORLD_CURVE WORLD_CURVE_RADIUS HAND_INVISIBILITY_EFFECT WHITE_WORLD <empty> <empty> DIRECTIONAL_LIGHTMAP DIRECTIONAL_LIGHTMAP_STRENGTH TORCHLIGHT_EXTRA_BRIGHTNESS

screen.OPTIMISATION   = OPTIMIZE_INTERPOLATION

screen.DEBUG_OPTS     = DEBUG DEBUG_VIEW DEBUG_VIEW_PBR *

## Screen options
##   OPTION    - option name
##   [NAME]    - link to sub-screen NAME
##   <profile> - profile selection
##   <empty>   - empty slot
##   *         - the rest of the options not configured on any of the screens

## Main screen
screen.columns=2
## Sub-screen
screen.GODRAY_OPTIONS.columns=3
screen.SKY_OPTIONS.columns=3
screen.WATER_COLOR_OPTS.columns=3
screen.DEBUG_OPTS.columns=3

